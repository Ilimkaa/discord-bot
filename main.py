import discord
from discord import app_commands
from discord.ext import commands
import os

TOKEN = os.getenv('MTM2MzY0NzEwNDQxNjc0Nzc0MQ.GgRc2_.UD3LDNQP-Mf9fb9YMihJJKRa2HSXACPiGrOr30')

intents = discord.Intents.all()
bot = commands.Bot(command_prefix='!', intents=intents)
tree = bot.tree

# –•—Ä–∞–Ω–∏–ª–∏—â–µ "–±–∏–æ" –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–ø–æ–∫–∞ –ø—Ä–æ—Å—Ç–æ –≤ —Å–ª–æ–≤–∞—Ä–µ)
user_data = {}

class ModerationView(discord.ui.View):
    def __init__(self, member: discord.Member):
        super().__init__(timeout=None)
        self.member = member

    @discord.ui.button(label="–ú—É—Ç", style=discord.ButtonStyle.gray, custom_id="mute")
    async def mute(self, interaction: discord.Interaction, button: discord.ui.Button):
        user_data[self.member.id]['muted'] = True
        await interaction.response.send_message(f"‚úÖ {self.member.mention} –∑–∞–º—É—á–µ–Ω!", ephemeral=True)

    @discord.ui.button(label="–í–∞—Ä–Ω", style=discord.ButtonStyle.blurple, custom_id="warn")
    async def warn(self, interaction: discord.Interaction, button: discord.ui.Button):
        user_data[self.member.id]['warns'] += 1
        await interaction.response.send_message(f"‚ö†Ô∏è {self.member.mention} –ø–æ–ª—É—á–∏–ª –≤–∞—Ä–Ω!", ephemeral=True)

    @discord.ui.button(label="–ë–∞–Ω", style=discord.ButtonStyle.danger, custom_id="ban")
    async def ban(self, interaction: discord.Interaction, button: discord.ui.Button):
        user_data[self.member.id]['banned'] = True
        await interaction.response.send_message(f"‚õî {self.member.mention} –∑–∞–±–∞–Ω–µ–Ω!", ephemeral=True)

    @discord.ui.button(label="–û–±–Ω–æ–≤–∏—Ç—å", style=discord.ButtonStyle.green, custom_id="refresh")
    async def refresh(self, interaction: discord.Interaction, button: discord.ui.Button):
        embed = create_embed(self.member)
        await interaction.response.edit_message(embed=embed, view=self)

    @discord.ui.button(label="–°–Ω—è—Ç—å –º—É—Ç", style=discord.ButtonStyle.secondary, row=1)
    async def unmute(self, interaction: discord.Interaction, button: discord.ui.Button):
        user_data[self.member.id]['muted'] = False
        await interaction.response.send_message(f"üîä –°–Ω—è—Ç –º—É—Ç —Å {self.member.mention}", ephemeral=True)

    @discord.ui.button(label="–°–Ω—è—Ç—å –≤–∞—Ä–Ω", style=discord.ButtonStyle.secondary, row=1)
    async def unwarn(self, interaction: discord.Interaction, button: discord.ui.Button):
        user_data[self.member.id]['warns'] = 0
        await interaction.response.send_message(f"üßº –í–∞—Ä–Ω—ã –æ—á–∏—â–µ–Ω—ã —É {self.member.mention}", ephemeral=True)

    @discord.ui.button(label="–°–Ω—è—Ç—å –±–∞–Ω", style=discord.ButtonStyle.secondary, row=1)
    async def unban(self, interaction: discord.Interaction, button: discord.ui.Button):
        user_data[self.member.id]['banned'] = False
        await interaction.response.send_message(f"üîì {self.member.mention} —Ä–∞–∑–±–∞–Ω–µ–Ω", ephemeral=True)

def create_embed(member: discord.Member):
    data = user_data.get(member.id, {
        'warns': 0,
        'muted': False,
        'banned': False
    })
    embed = discord.Embed(
        title="–í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—É—é —Ç–µ–±–µ –∫–æ–º–∞–Ω–¥—É –º–æ–¥–µ—Ä–∞—Ü–∏–∏",
        color=discord.Color.dark_gray()
    )
    embed.add_field(name="–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å", value=member.mention)
    embed.add_field(name="–í–∞—Ä–Ω—ã", value=str(data['warns']))
    embed.add_field(name="–í –º—É—Ç–µ", value="–î–∞" if data['muted'] else "–ù–µ—Ç")
    embed.add_field(name="–í –±–∞–Ω–µ", value="–î–∞" if data['banned'] else "–ù–µ—Ç")
    embed.add_field(name="–ù–∞–∫–∞–∑–∞–Ω–∏—è", value="–ü—É—Å—Ç–æ" if data['warns'] == 0 else "–ò–º–µ—é—Ç—Å—è")
    embed.set_thumbnail(url=member.display_avatar.url)
    return embed

@tree.command(name="action", description="–û—Ç–∫—Ä—ã—Ç—å –º–æ–¥–µ—Ä–∞—Ü–∏—é –¥–ª—è —É—á–∞—Å—Ç–Ω–∏–∫–∞")
@app_commands.describe(member="–£—á–∞—Å—Ç–Ω–∏–∫ –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏")
async def action(interaction: discord.Interaction, member: discord.Member):
    if member.id not in user_data:
        user_data[member.id] = {'warns': 0, 'muted': False, 'banned': False}
    embed = create_embed(member)
    view = ModerationView(member)
    await interaction.response.send_message(embed=embed, view=view, ephemeral=True)

@bot.event
async def on_ready():
    await tree.sync()
    print(f"‚úÖ Chromchik –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ {bot.user}")

bot.run(MTM2MzY0NzEwNDQxNjc0Nzc0MQ.GgRc2_.UD3LDNQP-Mf9fb9YMihJJKRa2HSXACPiGrOr30)
